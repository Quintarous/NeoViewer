plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dagger.hilt.android.plugin"
    id "kotlin-kapt"
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.austin.neoviewer"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner = "com.austin.neoviewer.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }
    packagingOptions {
        resources {
            excludes += ['/META-INF/AL2.0', '/META-INF/LGPL2.1']
        }
    }

    namespace 'com.austin.neoviewer'
}

dependencies {

    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh_version"
    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // gson
    implementation "com.google.code.gson:gson:$gson_version"
    // paging
    implementation("androidx.paging:paging-runtime:$paging_version")
    // room
    implementation("androidx.room:room-runtime:$room_version")
    testImplementation "junit:junit:$junit_version"
    kapt("androidx.room:room-compiler:$room_version")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    testImplementation("androidx.room:room-testing:$room_version")
    implementation("androidx.room:room-paging:2.5.0-alpha01")

    //hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")

    //hilt testing
    // For Robolectric tests.
    testImplementation("com.google.dagger:hilt-android-testing:$hilt_version")
    // ...with Kotlin.
    kaptTest("com.google.dagger:hilt-android-compiler:$hilt_version")
    // For instrumented tests.
    androidTestImplementation("com.google.dagger:hilt-android-testing:$hilt_version")
    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$hilt_version")


    // unit testing dependencies
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test:core-ktx:$androidx_test_version"
    // paging
    testImplementation("androidx.paging:paging-common:$paging_version")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")
    testImplementation "androidx.arch.core:core-testing:$arch_testing_version"


    // instrumented testing dependencies
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    //debugImplementation("androidx.fragment:fragment-testing:$fragment_version") // this one wants to be debug, codelab says use Implementation
    // Core library
    androidTestImplementation("androidx.test:core:$androidx_test_version")
    androidTestImplementation("androidx.test:core-ktx:$androidx_test_version")
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation("androidx.test:runner:$test_runner_version")
    androidTestImplementation("androidx.test:rules:$test_rules_version")
    // Assertions
    androidTestImplementation("androidx.test.ext:junit:$test_junit_version")
    androidTestImplementation("androidx.test.ext:junit-ktx:$test_junit_version")
    androidTestImplementation("androidx.test.ext:truth:$truth_version")
    // Espresso dependencies
    androidTestImplementation( "androidx.test.espresso:espresso-core:$espresso_version")
    androidTestImplementation( "androidx.test.espresso:espresso-contrib:$espresso_version")
    androidTestImplementation( "androidx.test.espresso:espresso-intents:$espresso_version")
    androidTestImplementation( "androidx.test.espresso:espresso-accessibility:$espresso_version")
    androidTestImplementation( "androidx.test.espresso:espresso-web:$espresso_version")
    androidTestImplementation( "androidx.test.espresso.idling:idling-concurrent:$espresso_version")


}